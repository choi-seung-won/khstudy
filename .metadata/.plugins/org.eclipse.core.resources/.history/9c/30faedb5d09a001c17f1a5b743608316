package day0303;
// 연산자(Operator)

// 연산자란 수학적 기호에 프로그래밍적 코드가 정의되어
// 특정 기호를 사용하면 해당 코드가 실행되서 결과값을 계산해주는
// 기호들을 연산자라고 한다.

// 연산자에는

// 산술연산자
// 할당연산자
// 비교연산자
// 논리연산자
// 비트연산자

// 다섯가지 종류가 있다
public class Ex07Operator {

    public static void main(String[] args) {
        // TODO Auto-generated method stub

        // 산술 연산자
        // 산술 연산자는 2가지 값에 대한
        // 수학 연산을 한다.
        // +: 앞의 값에서 뒤의 값을 더한 결과값을 구한다.
        // -: 앞의 값에서 뒤의 값을 뺀 결과값을 구한다.
        // *: 앞의 값에서 뒤의 값을 곱한 결과값을 구한다.
        // /: 앞의 값에서 뒤의 값을 나눈 몫을 구한다.
        // %: 앞의 값에서 뒤의 값을 나눈 나머지를 구한다.

        // 단, 산술 연산의 경우
        // 정수와 정수끼리의 연산은 결과값이 정수가 나오고
        // 정수와 실수끼리의 연산은 실수가 나온다
        // int 타입의 변수 number1과 number2를 선언하고 각각 3과 5를 저장
        int number1 = 3;
        int number2 = 5;

        // double 타입의 변수 myDouble1과 myDouble2를 선언하고 각각 3과 5를 저장

        double myDouble1 = 3;
        double myDouble2 = 5;

        System.out.println("1. 정수끼리의 산술 연산");

        System.out.println(number1 + number2);
        System.out.println(number1 - number2);
        System.out.println(number1 * number2);
        System.out.println(number1 / number2);
        System.out.println(number1 % number2);
        System.out.println("----------------");
        System.out.println();

        System.out.println("2. 실수끼리의 산술 연산");
        System.out.println(myDouble1 + myDouble2);
        System.out.println(myDouble1 - myDouble2);
        System.out.println(myDouble1 * myDouble2);
        System.out.println(myDouble1 / myDouble2);
        System.out.println(myDouble1 % myDouble2);
        System.out.println("----------------------");
        System.out.println();

        System.out.println("3. 정수와 실수끼리의 연산");
        System.out.println(number1 + myDouble2);
        System.out.println(number1 - myDouble2);
        System.out.println(number1 * myDouble2);
        System.out.println(number1 / myDouble2);
        System.out.println(number1 % myDouble2);
        System.out.println("----------------------");
        System.out.println();
        

    }

}
