package homework;

import util.ArrayUtil;
//ArrayUtil을 사용하여
//동적할당이 적용된 컴퓨터 로또 번호 추첨기를 만드시오.
// 심화) 또한 다양한 메소드를 만들어서 사용자가 여러게임을 하는 경우도 대비하시오.
import util.ScannerUtil;
import java.util.*;

public class Ex03Lotto02 {

    public static int[] computerNumbers;

    public static final int LOTTO_MIN = 1;
    public static final int LOTTO_MAX = 45;
    public static final int MAX_LENGTH = 6;

    //사용자의 게임들을 담을 int 2차원배열
    public static int [][]userNumbers;
    
    public static void main(String[] args) {
        // 1. computerNumbers를 길이가 0 인 배열로 초기화한다.
        computerNumbers = new int[0];
        // 2. computerNumbers에 중복되지 않는 랜덤숫자를
        
        // 메소드를 사용하여 추가한다.
        computerNumbers = insertRandomNum();
        // 3. computerNumbers의 저장된 값을
        // 메소드를 사용하여 오름차순 정렬한다.
        sort(computerNumbers);
        // 4. computerNumbers의 저장된 값을
        // 출력한다.
        printArray(computerNumbers);
    }

    // 배열에 MAX_LENGTH 만큼의 랜덤숫자를 추가하는
    // insertRandomNum()

    public static int[] insertRandomNum() {
        // while문을 사용하여
        // 특정 배열의 크기가MAX_LENGTH 보다 작을동안
        // 중복되지 않는 숫자를 해당 배열에 추가한다.
        // 랜덤 숫자를 담을 int배열선언 및 초기화
        int[] array = new int[0];
        // 랜덤 숫자를 뽑을 때 사용한 Random 클래스 변수
        Random random = new Random();

        while (ArrayUtil.size(array) < MAX_LENGTH) {

            // int temp에 1~45사이의 랜덤 숫자 지정
            int temp = random.nextInt(LOTTO_MAX) + LOTTO_MIN;

            // 만약 array에 temp가 존재하지 않는다면
            // array에 temp 추가

            if (!ArrayUtil.contains(array, temp)) {
                array = ArrayUtil.add(array, temp);
            }

        }
        return array;
    }
    
    
    //problem
    
    
    // int 배열에 저장된 값을 오름차순 정렬하는
    // sort(int[])
    public static void sort(int[] array) {
        for (int i = 0; i < ArrayUtil.size(array) - 1; i++) {
            if (ArrayUtil.get(array, i) > ArrayUtil.get(array, i + 1)) {
                ArrayUtil.set(array, i+1, ArrayUtil.set(array, i, ArrayUtil.get(array, i + 1)));
                i = -1;
            }
        }
    }
    
    //파라미터로 넘어온 배열을 출력하는 메소드
    public static void printArray(int[] array) {
        System.out.print("[");
        for(int i = 0 ; i < ArrayUtil.size(array); i ++) {
            System.out.printf("%2d",ArrayUtil.get(array, i));
            if(i != ArrayUtil.size(array)- 1) {
                System.out.print(", ");
            }
  
        }
        System.out.print("]");
    }
}
